const addBtn = document.getElementById('addBtn');
const input = document.getElementById('todoInput');
const dateInput = document.getElementById('dateInput');

const praiseMessages = [
  'Ïò§ÎäòÎèÑ Ïó¥Ïã¨Ìûà ÏÇ¥ÏïòÎã§',
  'ÏàòÍ≥†ÌñàÏñ¥',
  'Íæ∏Ï§ÄÌûà ÌïòÎ©¥ Ï¢ãÏùÄÏùºÏù¥ ÏÉùÍ∏∏Í±∞Ïïº :>',
  'ÏïûÏúºÎ°úÎèÑ Ïó¥Ïã¨ÌûàÌïòÏûê',
  'ÏµúÍ≥†Ïùò Î≥µÏàòÎäî ÏÑ±Í≥µ',
  'ÌïòÎ£®Î•º Ïûò ÎßàÎ¨¥Î¶¨ÌñàÎÑ§Ïöî üåü',
  'ÌñâÎ≥µÌï¥Ï†∏Îùº (+^+)'
];

// ÏöîÏùº Î∞∞Ïó¥: Í∏∞Î≥∏ ÏàúÏÑúÎäî [Ïùº, Ïõî, Ìôî, Ïàò, Î™©, Í∏à, ÌÜ†]
// ÌôîÎ©¥ ÌëúÏãú ÏàúÏÑúÎäî Ïõî, Ìôî, Ïàò, Î™©, Í∏à, ÌÜ†, Ïùº
const days = ['Ïùº', 'Ïõî', 'Ìôî', 'Ïàò', 'Î™©', 'Í∏à', 'ÌÜ†'];

// Ï£ºÏ∞® Î∏îÎ°ùÏùÑ ÏÇΩÏûÖÌï† container ÏßÄÏ†ï
const weekSheet = document.getElementById('week-container');

/*  
  sortDayBoxes() Ìï®ÏàòÎäî Ï£ºÏñ¥ÏßÑ Ï£ºÏ∞® Î∏îÎ°ù ÎÇ¥Ïùò .day Î∞ïÏä§Îì§ÏùÑ
  ÎØ∏Î¶¨ Ï†ïÌï¥Îëî ÏöîÏùº ÏàúÏÑú(Ïõî, Ìôî, Ïàò, Î™©, Í∏à, ÌÜ†, Ïùº)Î°ú Ï†ïÎ†¨ÌïòÏó¨ Î∞∞ÏπòÌï©ÎãàÎã§.
*/
function sortDayBoxes(weekBlock) {
  const weekDaysOrder = ['Ïõî', 'Ìôî', 'Ïàò', 'Î™©', 'Í∏à', 'ÌÜ†', 'Ïùº'];
  const dayBoxes = Array.from(weekBlock.querySelectorAll('.day'));
  dayBoxes.sort((a, b) => {
    const dayA = a.getAttribute('data-day');
    const dayB = b.getAttribute('data-day');
    return weekDaysOrder.indexOf(dayA) - weekDaysOrder.indexOf(dayB);
  });
  dayBoxes.forEach(dayBox => weekBlock.appendChild(dayBox)); // Ïù¥ÎèôÌïòÎ©¥ ÏàúÏÑú Ïû¨Î∞∞ÏπòÎê®
}

/*
  createWeekBlock(weekNumber) Ìï®ÏàòÎäî ÏßÄÏ†ïÌïú Ï£ºÏ∞®Ïùò Î∏îÎ°ùÏù¥ ÏóÜÏúºÎ©¥ ÏÉùÏÑ±Ìï©ÎãàÎã§.
  Ïó¨Í∏∞ÏÑúÎäî ÏöîÏùº Î∞ïÏä§Î•º ÎØ∏Î¶¨ ÏÉùÏÑ±ÌïòÏßÄ ÏïäÏäµÎãàÎã§.
  Ï£ºÏ∞® Î∏îÎ°ùÏùÄ 1Ï£ºÏ∞®Î∂ÄÌÑ∞ Ïò§Î¶ÑÏ∞®ÏàúÏúºÎ°ú Ï†ïÎ†¨ÎêòÏñ¥ DOMÏóê ÏÇΩÏûÖÎê©ÎãàÎã§.
*/
function createWeekBlock(weekNumber) {
  let weekBlock = document.querySelector(`.week-block[data-week="${weekNumber}"]`);
  if (!weekBlock) {
    weekBlock = document.createElement('div');
    weekBlock.classList.add('week-block');
    weekBlock.setAttribute('data-week', weekNumber);

    const weekTitle = document.createElement('h3');
    weekTitle.textContent = `${weekNumber}Ï£ºÏ∞®`;
    weekBlock.appendChild(weekTitle);

    // Ï£ºÏ∞® Î∏îÎ°ùÏùò Ïò¨Î∞îÎ•∏ ÏúÑÏπò Ï∞æÍ∏∞ (Ïò§Î¶ÑÏ∞®Ïàú Ï†ïÎ†¨)
    let inserted = false;
    const blocks = document.querySelectorAll('.week-block');
    blocks.forEach(block => {
      const currentWeek = parseInt(block.getAttribute('data-week'));
      if (!inserted && currentWeek > weekNumber) {
        weekSheet.insertBefore(weekBlock, block);
        inserted = true;
      }
    });
    if (!inserted) {
      weekSheet.appendChild(weekBlock);
    }
  }
  return weekBlock;
}

/*
  cleanupEmptyDayBox() Ìï®ÏàòÎäî Ìï¥Îãπ Ï£ºÏ∞®Ïùò ÏöîÏùº Î∞ïÏä§ ÎÇ¥Ïóê Ìï† ÏùºÏù¥ ÏóÜÏúºÎ©¥ ÏöîÏùº Î∞ïÏä§Î•º ÏÇ≠Ï†úÌï©ÎãàÎã§.
*/
function cleanupEmptyDayBox(weekNumber, dayName) {
  const weekBlock = document.querySelector(`.week-block[data-week="${weekNumber}"]`);
  if (!weekBlock) return;
  
  const dayBox = weekBlock.querySelector(`.day[data-day="${dayName}"]`);
  if (!dayBox) return;
  
  const ul = dayBox.querySelector('.todo-list');
  if (!ul || ul.children.length === 0) {
    dayBox.remove();
  }
}

/*
  addTodoToWeekDay() Ìï®ÏàòÎäî Ìï† ÏùºÏùÑ Ï∂îÍ∞ÄÌï† Îïå,
  Ìï¥Îãπ Ï£ºÏ∞® Î∏îÎ°ù ÎÇ¥Ïóê Ìï† ÏùºÏù¥ ÏÜçÌïú ÏöîÏùº Î∞ïÏä§Í∞Ä ÏóÜÏúºÎ©¥ ÏÉùÏÑ±Ìïú ÌõÑ Ìï† ÏùºÏùÑ Ï∂îÍ∞ÄÌï©ÎãàÎã§.
  Ï∂îÍ∞Ä ÌõÑ, Ìï¥Îãπ Ï£ºÏ∞® Î∏îÎ°ù ÎÇ¥Ïùò ÏöîÏùº Î∞ïÏä§Îì§ÏùÑ Ïõî~Ïùº ÏàúÏúºÎ°ú Ï†ïÎ†¨Ìï©ÎãàÎã§.
*/
function addTodoToWeekDay(text, weekNumber, dayName, completed = false, dateString = '') {
  const weekBlock = createWeekBlock(weekNumber);
  
  // Ìï¥Îãπ Ï£ºÏ∞® Î∏îÎ°ù ÎÇ¥Ïóê Ìï¥Îãπ ÏöîÏùº Î∞ïÏä§Í∞Ä ÏóÜÏúºÎ©¥ ÏÉùÏÑ±
  let dayDiv = weekBlock.querySelector(`.day[data-day="${dayName}"]`);
  if (!dayDiv) {
    dayDiv = document.createElement('div');
    dayDiv.classList.add('day');
    dayDiv.setAttribute('data-day', dayName);

    const dayTitle = document.createElement('h4');
    dayTitle.textContent = `${dayName}ÏöîÏùº`;
    dayDiv.appendChild(dayTitle);

    const ul = document.createElement('ul');
    ul.classList.add('todo-list');
    dayDiv.appendChild(ul);

    const praiseBox = document.createElement('div');
    praiseBox.classList.add('praiseBox');
    dayDiv.appendChild(praiseBox);

    weekBlock.appendChild(dayDiv);
  }
  
  // Ï†ïÎ†¨ Í≥ºÏ†ï: ÏöîÏùº Î∞ïÏä§Îì§Ïù¥ Ïò¨Î∞îÎ•∏ ÏàúÏÑú(Ïõî,Ìôî,Ïàò,Î™©,Í∏à,ÌÜ†,Ïùº)Î°ú Î∞∞ÏπòÎêòÎèÑÎ°ù Ìï®
  sortDayBoxes(weekBlock);

  const dayColumn = dayDiv.querySelector('.todo-list');
  if (!dayColumn) return;

  const li = document.createElement('li');

  const checkbox = document.createElement('input');
  checkbox.type = 'checkbox';
  checkbox.checked = completed;

  const textSpan = document.createElement('span');
  textSpan.textContent = text;
  if (completed) textSpan.classList.add('completed');

  const dateSpan = document.createElement('span');
  dateSpan.classList.add('todo-date');
  if (dateString) dateSpan.textContent = ` (${dateString})`;

  const delBtn = document.createElement('button');
  delBtn.textContent = 'ÏÇ≠Ï†ú';
  delBtn.style.marginLeft = '10px';
  delBtn.addEventListener('click', () => {
    li.remove();
    updateLocalStorage();
    checkAllCompletedForDay(weekNumber, dayName);
    cleanupEmptyDayBox(weekNumber, dayName);  // Ìï¥Îãπ ÏöîÏùºÏùò Ìï† ÏùºÏù¥ ÏóÜÏúºÎ©¥ ÏöîÏùº Î∞ïÏä§ ÏÇ≠Ï†ú
    cleanupEmptyWeekBlock(weekNumber);
  });

  checkbox.addEventListener('change', () => {
    textSpan.classList.toggle('completed', checkbox.checked);
    updateLocalStorage();
    checkAllCompletedForDay(weekNumber, dayName);
  });

  li.appendChild(checkbox);
  li.appendChild(textSpan);
  li.appendChild(dateSpan);
  li.appendChild(delBtn);
  dayColumn.appendChild(li);
}

function checkAllCompletedForDay(weekNumber, dayName) {
  const weekBlock = document.querySelector(`.week-block[data-week="${weekNumber}"]`);
  if (!weekBlock) return;

  const daySection = weekBlock.querySelector(`.day[data-day="${dayName}"]`);
  if (!daySection) return;

  const praiseBox = daySection.querySelector('.praiseBox');
  const checkboxes = daySection.querySelectorAll('input[type="checkbox"]');
  const allChecked = checkboxes.length > 0 && Array.from(checkboxes).every(cb => cb.checked);

  if (praiseBox) {
    praiseBox.textContent = allChecked
      ? praiseMessages[Math.floor(Math.random() * praiseMessages.length)]
      : '';
  }
}

function cleanupEmptyWeekBlock(weekNumber) {
  const weekBlock = document.querySelector(`.week-block[data-week="${weekNumber}"]`);
  if (!weekBlock) return;

  const hasTodos = weekBlock.querySelectorAll('li').length > 0;
  if (!hasTodos) {
    weekBlock.remove();
  }
}

function updateLocalStorage() {
  const allTodos = [];
  document.querySelectorAll('.week-block').forEach(weekBlock => {
    const weekNumber = parseInt(weekBlock.getAttribute('data-week'));
    weekBlock.querySelectorAll('.day').forEach(daySection => {
      const dayName = daySection.getAttribute('data-day');
      daySection.querySelectorAll('li').forEach(li => {
        const textSpan = li.querySelector('span:not(.todo-date)');
        const dateSpan = li.querySelector('.todo-date');
        const text = textSpan ? textSpan.textContent : '';
        const dateString = dateSpan ? dateSpan.textContent.replace(/[()]/g, '').trim() : '';
        const completed = li.querySelector('input[type="checkbox"]').checked;

        allTodos.push({ text, weekNumber, dayName, completed, dateString });
      });
    });
  });

  localStorage.setItem('todos', JSON.stringify(allTodos));
}

function loadTodos() {
  const storedTodos = JSON.parse(localStorage.getItem('todos')) || [];
  storedTodos.forEach(({ text, weekNumber, dayName, completed, dateString }) => {
    addTodoToWeekDay(text, weekNumber, dayName, completed, dateString);
  });
}

function getWeekNumber(date) {
  const year = date.getFullYear();
  const month = date.getMonth();
  const firstDay = new Date(year, month, 1);
  const firstDayWeekday = firstDay.getDay();

  const currentDate = date.getDate();
  const daysInFirstWeek = 8 - firstDayWeekday; // Ï≤´ Ï£º ÎÇ®ÏùÄ ÎÇ†Ïßú

  if (currentDate <= daysInFirstWeek) {
    return 1;
  } else {
    return 1 + Math.ceil((currentDate - daysInFirstWeek) / 7);
  }
}

addBtn.addEventListener('click', () => {
  const text = input.value.trim();
  const selectedDate = new Date(dateInput.value);

  if (!text) {
    alert('Ìï† ÏùºÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.');
    return;
  }
  if (isNaN(selectedDate.getTime())) {
    alert('ÎÇ†ÏßúÎ•º ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöî.');
    return;
  }

  const dayName = days[selectedDate.getDay()];
  const dateString = selectedDate.toLocaleDateString();
  const weekNumber = getWeekNumber(selectedDate);

  addTodoToWeekDay(text, weekNumber, dayName, false, dateString);
  updateLocalStorage();
  input.value = '';
  dateInput.value = '';
  checkAllCompletedForDay(weekNumber, dayName);
});

input.addEventListener('keydown', e => {
  if (e.key === 'Enter') addBtn.click();
});

document.addEventListener('DOMContentLoaded', loadTodos);